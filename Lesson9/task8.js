// Мы можем тонко настраивать строковые и численные преобразования, используя специальные методы объекта.

// Существуют три варианта преобразований
// "string" - Для преобразования объекта к строке, когда операция ожидает получить строку, например alert:
// "number" - Для преобразования объекта к числу, в случае математических операций:
// "default" - Происходит редко, когда оператор «не уверен», какой тип ожидать.

/*
    В процессе преобразования движок JavaScript пытается найти и вызвать три следующих метода объекта:

    1. Вызывает obj[Symbol.toPrimitive](hint) – метод с символьным ключом Symbol.toPrimitive (системный символ),
        если такой метод существует, и передаёт ему хинт.

    2. Иначе, если хинт равен "string" пытается вызвать obj.toString(),
        а если его нет, то obj.valueOf(), если он существует.
    3. В случае, если хинт равен "number" или "default" пытается вызвать obj.valueOf(),
        а если его нет, то obj.toString(), если он существует.
*/

const user = {
    name: "John",
    money: 1000,

    [Symbol.toPrimitive](hint) {
        console.log(`hint: ${hint}`);
        return hint == "string" ? `{name: "${this.name}"}` : this.money;
    }
};

// демонстрация результатов преобразований:
console.log(String(user)); // hint: string -> {name: "John"}
console.log(+user); // hint: number -> 1000
console.log(user + 500); // hint: default -> 1500
